day46(웹개발3 10일차)

1. 클론코딩 개인프로젝트
   차주 월요일 설명 후 진행(html, css)
   기간 대략 7일정도(수업일 기준)

2. JSP
   세미 팀프로젝트(게시판)
   기간 10일정도

3. Spring Boot
   기간 3주~4주
-------------------------------------------------
CSS -> Box Model -> display 속성 -> flex box

1. CSS
1) CSS 형식
   선택자{
      속성1:속성값1;
      속성2:속성값2;
   }

2) CSS 적용 방법
   - 인라인 스타일 : 태그 내에 style 속성을 사용하는 방법
   - 내부 스타일 : <head>태그내에 <style></style> 태그를 사용하여 각 요소들의 스타일을 적용하는 방법
   - 외부 스타일 : css 확장자를 가진 외부 파일에 스타일만 적용하고 html 파일에서는 <link> 태그로 연결하는 방법

3) 선택자
   어떤 요소를 선택하기 위해 사용하는 것(태그명, 클래스명, 아이디명 등..)
   id : 특정 태그에 식별가능한 고유한 값을 부여할 때
      선택자에서 사용 시에는 #아이디명
   class : 여러 태그를 하나의 그룹으로 묶어줄 때
      선택자에서 사용 시에는 .클래스명

2. Box Model
	HTML의 모든 요소는 일정한 영역을 차지하게 된다
	CSS에서는 이런 영역을 BoxModel이라고 한다

1) 박스 모델의 구성
	margin : 테두리 바깥 여백
	border : 테두리
	padding : 테두리 안쪽 여백
	contents : 컨텐츠의 영역

	
	인라인 요소의 박스 모델도 margin, border, padding은 설정이 가능하지만, width, height 를 사용할 수 없으므로
	컨텐츠 영역의 크기를 설정할 수 없다.

2) 박스모델 css 속성
- contents
	width : 너비
	height : 높이
	단위는 기본적으로 px이며 이 외에도 여러 단위가 있다(%, vw, vh 등..)
	인라인 요소는 불가능하다

- border
	border : 굵기 모양 색상

- padding
	padding : 4방향
	padding : 상하 좌우
	padding : 상 좌우 하
	padding : 상 우 하 좌

- margin
	margin : 4방향
	margin : 상하 좌우
	margin: 상 좌우 하
	margin: 상 우 하 좌
	auto를 사용하면 요소를 중앙에 위치하게 할 수 있다.
	블록요소를 세로로 배치하게되면margin이 중첩된다(겹쳐진다)
	ex) 20px 마진을 가진 요소들이 세로로 배치되면 각 요소들의 상하 간격이 40px이 아닌 20px이다

3. display 속성
	HTML에서 요소를 어떻게 표시할 지 결정한다.
	HTML의 요소들은 기본적을 display의 속성값이 설정되어 있다.
	블록요소 -> display : block
	인라인요소 -> display : inline

	우리가 사용한 블록요소를 인라인으로 변경하고 싶으면 display 속성에 값을 inline으로 변경하면 된다.

display 속성의 기본 4가지 값
	- none
	요소를 보이지 않게 설정한다
	단순히 투명해지는 것이 아니라 아예 사라지게 되므로 공간을 차지하지 않는다.

	- block
	블록요소로 설정한다
	블록요소는 기본적으로 가로 영역을 모두 차지한다

	- inline
	인라인 요소로 설정한다
	인라인 요소는 기본적으로 컨텐츠의 크기만큼만의 영역을 차지한다
	블록요소와 달리 컨텐츠의 너비와 높이를 설정할 수 없다
	
	- inline-block
	인라인 블록요소로 설정한다
	인라인 블록은 인라인과 블록의 특징을 섞어놓은 요소이다
	인라인처럼 컨텐츠 만큼만의 영역을 차지하지만 블록처럼 컨텐츠의 너비, 높이를 변경할 수 있다.
	내부는 block요소, 외부는 inline요소의 특징을 갖는다.

4. flex box
1) 레이아웃을 만들 때 사용하는 속성
	- float
		오래돼서 안정성은 좋지만 반응형 페이지를 만들 떄 사용하기가 불편하다.

	- display의 flex box
		CSS3에서 레이아웃을 만들 수 있도록 제공하는 방식이다.

	- grid
		최근에 주목받고 있으며 처음 배우기에는 조금 어려울 수 있다.

2) flex box
	레이아웃을 만드는 하나의 방식이다.
	복잡하지 않게 유연하게 요소들의 크기와 순서를 정하여 배치할 수 있다.

3) flex box의 구성
	- flex container
		레이아웃을 적용하여 배치하려는 요소들을 감싸고 있는 부모요소

	- flex item 
		실질적으로 배치하려는 요소이며 flex container의 자식요소이다
		자식요소인 flex item은 여러개 만들 수 있다.

	- 주축(main axis)
		자식 요소가 배치되는 방향

	- 교차축(cross axis)
		주축을 가로지르는 방향

3) flex container 만들기
	컨테이너로 사용할 부모요소에 display:flex 속성을 지정한다.		


















