day42(jdbc / 웹개발3 6일차)

MVC 패턴 -> JDBC

1. 소프트웨어 디자인 설계 패턴
MVC
	/* DBMS 컬럼 -> JAVA MODEL 객체 -> 클래스 (필드, 생성자, 메소드)

	USER 테이블
	USER_ID, USER_NAME, USER_AGE

	UserVO or UserDTO 클래스
	userId, userName, userAge */

	M(Mode) : 테이블에서 조회된 결과값을 담기 위한 변수들이 선언된 클래스
		클래스 명 뒤에 VO, DTO라는 문자열을 붙여준다.
		VO(Value Object) : 테이블을 보고 그대로 만든 객체
		DTO(Data Transfer Object) : 화면에 결과를 한번에 묶어서 전달할 객체

	V(View) : 사용자에게 보여질 화면을 구성하는 부분
		Controller에 선언된 CRUD 메소드를 사용하는 부분

	C(Controller) : JSP에서 더 자세히 알아보자
		DAO(Data Access Object) : 테이블에 접근할 수 있는 메소드들이 선언된 클래스
			접근 후 결과값이 있을 경우 Model객체에 담은 후 처리

2. JDBC 사용순서
1) JDBC Driver 로딩
	DB에 맞는 드라이버를 로딩한다
2) Connection
	드라이버 연결 후 커넥션 객체를 얻어낸다
	커넥션 객체를 얻어냈다면 DBMS와 정상 연결된 것이다.
3) PreparedStatement
	JDBC를 통해 DBMS에 보낼 쿼리를 관리해주는 인터페이스
	executeUpdate() / excuteQuery() 메소드를 통해 쿼리를 보낸다.
4) ResultSet
	쿼리의 결과를 받을 때 사용하는 인터페이스
5) close()
	항상 db 와 연결하여 사용한 객체들은 close()를 통해 연결을 닫아줘야한다.
		



